from typing import List, Optional

from aiohttp import ClientSession

from github.http import HTTPClient
from github.abc import Node
from github.objects import AuthenticatedUser
from github.objects import CodeOfConduct
from github.objects import License
from github.objects import Metadata
from github.objects import Organization
from github.objects import RateLimit
from github.objects import Repository
from github.objects import Topic
from github.objects import User


class Client():
    http: HTTPClient

    def __init__(self, token: str, *, base_url: str=..., user_agent: str=..., session: ClientSession=...) -> None: ...

    @property
    def base_url(self) -> str: ...
    @base_url.setter
    def base_url(self, value: str) -> None: ...
    @property
    def user_agent(self) -> str: ...
    @user_agent.setter
    def user_agent(self, value: str) -> None: ...

    async def fetch_all_codes_of_conduct(self) -> List[CodeOfConduct]: ...
    async def fetch_all_licenses(self) -> List[License]: ...
    async def fetch_authenticated_user(self) -> AuthenticatedUser: ...
    async def fetch_code_of_conduct(self, key: str) -> CodeOfConduct: ...
    async def fetch_license(self, key: str) -> License: ...
    async def fetch_metadata(self) -> Metadata: ...
    async def fetch_node(self, id: str) -> Node: ...
    async def fetch_nodes(self, *ids: str) -> List[Node]: ...
    async def fetch_organization(self, login: str) -> Organization: ...
    async def fetch_rate_limit(self) -> RateLimit: ...
    async def fetch_repository(self, owner: str, name: str) -> Repository: ...
    async def fetch_scopes(self) -> List[str]: ...
    async def fetch_topic(self, name: str) -> Topic: ...
    async def fetch_user(self, login: str) -> User: ...
